{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/alexmario/Desktop/Dj Suru/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createElement, forwardRef, useState, useEffect } from 'react';\nconst defaultIconDimensions = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16\n});\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze(_objectSpread(_objectSpread({}, defaultIconDimensions), defaultIconTransformations));\nconst defaultExtendedIconProps = Object.freeze(_objectSpread(_objectSpread({}, defaultIconProps), {}, {\n  body: \"\",\n  hidden: false\n}));\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */Object.create(null);\n  const resolved = /* @__PURE__ */Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  Object.keys(icons).concat(Object.keys(aliases)).forEach(resolve);\n  return resolved;\n}\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(icons[name2] || aliases[name2], currentProps);\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach(name => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\nconst optionalPropertyDefaults = _objectSpread({\n  provider: \"\",\n  aliases: {},\n  not_found: {}\n}, defaultIconDimensions);\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (\n    // Name cannot be empty\n    !name ||\n    // Must have body\n    typeof icon.body !== \"string\" ||\n    // Check other props\n    !checkOptionalProps(icon, defaultExtendedIconProps)) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (\n    // Name cannot be empty\n    !name ||\n    // Parent must be set and point to existing icon\n    typeof parent !== \"string\" || !icons[parent] && !aliases[parent] ||\n    // Check other props\n    !checkOptionalProps(icon, defaultExtendedIconProps)) {\n      return null;\n    }\n  }\n  return data;\n}\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = function (value, validate, allowSimpleName) {\n  let provider = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!(\n  // Check prefix: cannot be empty, unless allowSimpleName is enabled\n  // Check name: cannot be empty\n  (allowSimpleName && icon.prefix === \"\" || !!icon.prefix) && !!icon.name);\n};\nconst dataStorage = /* @__PURE__ */Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */Object.create(null),\n    missing: /* @__PURE__ */new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = _objectSpread({}, icon);\n      return true;\n    }\n  } catch (err) {}\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach(provider2 => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach(prefix2 => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(Object.keys(storage.icons).map(name => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name));\n    });\n  });\n  return allIcons;\n}\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  if (data) {\n    return addIconToStorage(storage, icon.name, data);\n  } else {\n    storage.missing.add(icon.name);\n    return true;\n  }\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconLoaded(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? _objectSpread(_objectSpread({}, defaultIconProps), result) : result;\n}\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze(_objectSpread(_objectSpread({}, defaultIconSizeCustomisations), defaultIconTransformations));\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\nfunction splitSVGDefs(content) {\n  let tag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"defs\";\n  let defs = \"\";\n  const index = content.indexOf(\"<\" + tag);\n  while (index >= 0) {\n    const start = content.indexOf(\">\", index);\n    const end = content.indexOf(\"</\" + tag);\n    if (start === -1 || end === -1) {\n      break;\n    }\n    const endEnd = content.indexOf(\">\", end);\n    if (endEnd === -1) {\n      break;\n    }\n    defs += content.slice(start + 1, end).trim();\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n  }\n  return {\n    defs,\n    content\n  };\n}\nfunction mergeDefsAndContent(defs, content) {\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\nfunction wrapSVGContent(body, start, end) {\n  const split = splitSVGDefs(body);\n  return mergeDefsAndContent(split.defs, start + split.content + end);\n}\nconst isUnsetKeyword = value => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = _objectSpread(_objectSpread({}, defaultIconProps), icon);\n  const fullCustomisations = _objectSpread(_objectSpread({}, defaultIconCustomisations), customisations);\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach(props => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = wrapSVGContent(body, '<g transform=\"' + transformations.join(\" \") + '\">', \"</g>\");\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  const viewBox = [box.left, box.top, boxWidth, boxHeight];\n  attributes.viewBox = viewBox.join(\" \");\n  return {\n    attributes,\n    viewBox,\n    body\n  };\n}\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body) {\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : randomPrefix;\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach(id => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n    // Allowed characters before id: [#;\"]\n    // Allowed characters after id: [)\"], .[a-z]\n    new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + suffix + \"$3\");\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\nconst storage = /* @__PURE__ */Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */Object.create(null);\nconst fallBackAPISources = [\"https://api.simplesvg.com\", \"https://api.unisvg.com\"];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {}\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach(item => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\":\n      {\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(\",\");\n        const urlParams = new URLSearchParams({\n          icons: iconsList\n        });\n        path += prefix + \".json?\" + urlParams.toString();\n        break;\n      }\n    case \"custom\":\n      {\n        const uri = params.uri;\n        path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n        break;\n      }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then(response => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then(data => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach(icon => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\nfunction removeCallback(storages, id) {\n  storages.forEach(storage => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter(row => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach(item => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter(icon => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach(storage => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\nfunction listToIcons(list) {\n  let validate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let simpleNames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const result = [];\n  list.forEach(item => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach(callback => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter(queued => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach(callback => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = _objectSpread(_objectSpread({}, defaultConfig), cfg);\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter(item => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    });\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find(value => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: index => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\nfunction emptyCallback$1() {}\nconst redundancyCache = /* @__PURE__ */Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\nfunction emptyCallback() {}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction checkIconNamesForAPI(icons) {\n  const valid = [];\n  const invalid = [];\n  icons.forEach(name => {\n    (name.match(matchIconName) ? valid : invalid).push(name);\n  });\n  return {\n    valid,\n    invalid\n  };\n}\nfunction parseLoaderResponse(storage, icons, data) {\n  function checkMissing() {\n    const pending = storage.pendingIcons;\n    icons.forEach(name => {\n      if (pending) {\n        pending.delete(name);\n      }\n      if (!storage.icons[name]) {\n        storage.missing.add(name);\n      }\n    });\n  }\n  if (data && typeof data === \"object\") {\n    try {\n      const parsed = addIconSet(storage, data);\n      if (!parsed.length) {\n        checkMissing();\n        return;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  checkMissing();\n  loadedNewIcons(storage);\n}\nfunction parsePossiblyAsyncResponse(response, callback) {\n  if (response instanceof Promise) {\n    response.then(data => {\n      callback(data);\n    }).catch(() => {\n      callback(null);\n    });\n  } else {\n    callback(response);\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const {\n        provider,\n        prefix\n      } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      if (!icons2 || !icons2.length) {\n        return;\n      }\n      const customIconLoader = storage.loadIcon;\n      if (storage.loadIcons && (icons2.length > 1 || !customIconLoader)) {\n        parsePossiblyAsyncResponse(storage.loadIcons(icons2, prefix, provider), data => {\n          parseLoaderResponse(storage, icons2, data);\n        });\n        return;\n      }\n      if (customIconLoader) {\n        icons2.forEach(name => {\n          const response = customIconLoader(name, prefix, provider);\n          parsePossiblyAsyncResponse(response, data => {\n            const iconSet = data ? {\n              prefix,\n              icons: {\n                [name]: data\n              }\n            } : null;\n            parseLoaderResponse(storage, [name], iconSet);\n          });\n        });\n        return;\n      }\n      const {\n        valid,\n        invalid\n      } = checkIconNamesForAPI(icons2);\n      if (invalid.length) {\n        parseLoaderResponse(storage, invalid, null);\n      }\n      if (!valid.length) {\n        return;\n      }\n      const api = prefix.match(matchIconName) ? getAPIModule(provider) : null;\n      if (!api) {\n        parseLoaderResponse(storage, valid, null);\n        return;\n      }\n      const params = api.prepare(provider, prefix, valid);\n      params.forEach(item => {\n        sendAPIQuery(provider, item, data => {\n          parseLoaderResponse(storage, item.icons, data);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach(icon => {\n    const {\n      provider,\n      prefix\n    } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach(icon => {\n    const {\n      provider,\n      prefix,\n      name\n    } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach(storage => {\n    const list = newIcons[storage.provider][storage.prefix];\n    if (list.length) {\n      loadNewIcons(storage, list);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = icon => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], loaded => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill(_objectSpread(_objectSpread({}, defaultIconProps), data));\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\nfunction setCustomIconsLoader(loader, prefix, provider) {\n  getStorage(provider || \"\", prefix).loadIcons = loader;\n}\nfunction setCustomIconLoader(loader, prefix, provider) {\n  getStorage(provider || \"\", prefix).loadIcon = loader;\n}\nfunction mergeCustomisations(defaults, item) {\n  const result = _objectSpread({}, defaults);\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach(str => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\nfunction rotateFromString(value) {\n  let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\nlet policy;\nfunction createPolicy() {\n  try {\n    policy = window.trustedTypes.createPolicy(\"iconify\", {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      createHTML: s => s\n    });\n  } catch (err) {\n    policy = null;\n  }\n}\nfunction cleanUpInnerHTML(html) {\n  if (policy === void 0) {\n    createPolicy();\n  }\n  return policy ? policy.createHTML(html) : html;\n}\nconst defaultExtendedIconCustomisations = _objectSpread(_objectSpread({}, defaultIconCustomisations), {}, {\n  inline: false\n});\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n  'xmlns': 'http://www.w3.org/2000/svg',\n  'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n  'aria-hidden': true,\n  'role': 'img'\n};\n/**\n * Style modes\n */\nconst commonProps = {\n  display: 'inline-block'\n};\nconst monotoneProps = {\n  backgroundColor: 'currentColor'\n};\nconst coloredProps = {\n  backgroundColor: 'transparent'\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n  Image: 'var(--svg)',\n  Repeat: 'no-repeat',\n  Size: '100% 100%'\n};\nconst propsToAddTo = {\n  WebkitMask: monotoneProps,\n  mask: monotoneProps,\n  background: coloredProps\n};\nfor (const prefix in propsToAddTo) {\n  const list = propsToAddTo[prefix];\n  for (const prop in propsToAdd) {\n    list[prefix + prop] = propsToAdd[prop];\n  }\n}\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = _objectSpread(_objectSpread({}, defaultExtendedIconCustomisations), {}, {\n  inline: true\n});\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n  return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon,\n// Partial properties\nprops,\n// Icon name\nname) => {\n  // Get default properties\n  const defaultProps = props.inline ? inlineDefaults : defaultExtendedIconCustomisations;\n  // Get all customisations\n  const customisations = mergeCustomisations(defaultProps, props);\n  // Check mode\n  const mode = props.mode || 'svg';\n  // Create style\n  const style = {};\n  const customStyle = props.style || {};\n  // Create SVG component properties\n  const componentProps = _objectSpread({}, mode === 'svg' ? svgDefaults : {});\n  if (name) {\n    const iconName = stringToIcon(name, false, true);\n    if (iconName) {\n      const classNames = ['iconify'];\n      const props = ['provider', 'prefix'];\n      for (const prop of props) {\n        if (iconName[prop]) {\n          classNames.push('iconify--' + iconName[prop]);\n        }\n      }\n      componentProps.className = classNames.join(' ');\n    }\n  }\n  // Get element properties\n  for (let key in props) {\n    const value = props[key];\n    if (value === void 0) {\n      continue;\n    }\n    switch (key) {\n      // Properties to ignore\n      case 'icon':\n      case 'style':\n      case 'children':\n      case 'onLoad':\n      case 'mode':\n      case 'ssr':\n        break;\n      // Forward ref\n      case '_ref':\n        componentProps.ref = value;\n        break;\n      // Merge class names\n      case 'className':\n        componentProps[key] = (componentProps[key] ? componentProps[key] + ' ' : '') + value;\n        break;\n      // Boolean attributes\n      case 'inline':\n      case 'hFlip':\n      case 'vFlip':\n        customisations[key] = value === true || value === 'true' || value === 1;\n        break;\n      // Flip as string: 'horizontal,vertical'\n      case 'flip':\n        if (typeof value === 'string') {\n          flipFromString(customisations, value);\n        }\n        break;\n      // Color: copy to style\n      case 'color':\n        style.color = value;\n        break;\n      // Rotation as string\n      case 'rotate':\n        if (typeof value === 'string') {\n          customisations[key] = rotateFromString(value);\n        } else if (typeof value === 'number') {\n          customisations[key] = value;\n        }\n        break;\n      // Remove aria-hidden\n      case 'ariaHidden':\n      case 'aria-hidden':\n        if (value !== true && value !== 'true') {\n          delete componentProps['aria-hidden'];\n        }\n        break;\n      // Copy missing property if it does not exist in customisations\n      default:\n        if (defaultProps[key] === void 0) {\n          componentProps[key] = value;\n        }\n    }\n  }\n  // Generate icon\n  const item = iconToSVG(icon, customisations);\n  const renderAttribs = item.attributes;\n  // Inline display\n  if (customisations.inline) {\n    style.verticalAlign = '-0.125em';\n  }\n  if (mode === 'svg') {\n    // Add style\n    componentProps.style = _objectSpread(_objectSpread({}, style), customStyle);\n    // Add icon stuff\n    Object.assign(componentProps, renderAttribs);\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    let id = props.id;\n    if (typeof id === 'string') {\n      // Convert '-' to '_' to avoid errors in animations\n      id = id.replace(/-/g, '_');\n    }\n    // Add icon stuff\n    componentProps.dangerouslySetInnerHTML = {\n      __html: cleanUpInnerHTML(replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact'))\n    };\n    return createElement('svg', componentProps);\n  }\n  // Render <span> with style\n  const {\n    body,\n    width,\n    height\n  } = icon;\n  const useMask = mode === 'mask' || (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n  // Generate SVG\n  const html = iconToHTML(body, _objectSpread(_objectSpread({}, renderAttribs), {}, {\n    width: width + '',\n    height: height + ''\n  }));\n  // Generate style\n  componentProps.style = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, style), {}, {\n    '--svg': svgToURL(html),\n    'width': fixSize(renderAttribs.width),\n    'height': fixSize(renderAttribs.height)\n  }, commonProps), useMask ? monotoneProps : coloredProps), customStyle);\n  return createElement('span', componentProps);\n};\n\n/**\n * Enable cache\n *\n * @deprecated No longer used\n */\nfunction enableCache(storage) {\n  //\n}\n/**\n * Disable cache\n *\n * @deprecated No longer used\n */\nfunction disableCache(storage) {\n  //\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  const _window = window;\n  // Load icons from global \"IconifyPreload\"\n  if (_window.IconifyPreload !== void 0) {\n    const preload = _window.IconifyPreload;\n    const err = 'Invalid IconifyPreload syntax.';\n    if (typeof preload === 'object' && preload !== null) {\n      (preload instanceof Array ? preload : [preload]).forEach(item => {\n        try {\n          if (\n          // Check if item is an object and not null/array\n          typeof item !== 'object' || item === null || item instanceof Array ||\n          // Check for 'icons' and 'prefix'\n          typeof item.icons !== 'object' || typeof item.prefix !== 'string' ||\n          // Add icon set\n          !addCollection(item)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      });\n    }\n  }\n  // Set API from global \"IconifyProviders\"\n  if (_window.IconifyProviders !== void 0) {\n    const providers = _window.IconifyProviders;\n    if (typeof providers === 'object' && providers !== null) {\n      for (let key in providers) {\n        const err = 'IconifyProviders[' + key + '] is invalid.';\n        try {\n          const value = providers[key];\n          if (typeof value !== 'object' || !value || value.resources === void 0) {\n            continue;\n          }\n          if (!addAPIProvider(key, value)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      }\n    }\n  }\n}\nfunction IconComponent(props) {\n  const [mounted, setMounted] = useState(!!props.ssr);\n  const [abort, setAbort] = useState({});\n  // Get initial state\n  function getInitialState(mounted) {\n    if (mounted) {\n      const name = props.icon;\n      if (typeof name === 'object') {\n        // Icon as object\n        return {\n          name: '',\n          data: name\n        };\n      }\n      const data = getIconData(name);\n      if (data) {\n        return {\n          name,\n          data\n        };\n      }\n    }\n    return {\n      name: ''\n    };\n  }\n  const [state, setState] = useState(getInitialState(!!props.ssr));\n  // Cancel loading\n  function cleanup() {\n    const callback = abort.callback;\n    if (callback) {\n      callback();\n      setAbort({});\n    }\n  }\n  // Change state if it is different\n  function changeState(newState) {\n    if (JSON.stringify(state) !== JSON.stringify(newState)) {\n      cleanup();\n      setState(newState);\n      return true;\n    }\n  }\n  // Update state\n  function updateState() {\n    var _a;\n    const name = props.icon;\n    if (typeof name === 'object') {\n      // Icon as object\n      changeState({\n        name: '',\n        data: name\n      });\n      return;\n    }\n    // New icon or got icon data\n    const data = getIconData(name);\n    if (changeState({\n      name,\n      data\n    })) {\n      if (data === undefined) {\n        // Load icon, update state when done\n        const callback = loadIcons([name], updateState);\n        setAbort({\n          callback\n        });\n      } else if (data) {\n        // Icon data is available: trigger onLoad callback if present\n        (_a = props.onLoad) === null || _a === void 0 ? void 0 : _a.call(props, name);\n      }\n    }\n  }\n  // Mounted state, cleanup for loader\n  useEffect(() => {\n    setMounted(true);\n    return cleanup;\n  }, []);\n  // Icon changed or component mounted\n  useEffect(() => {\n    if (mounted) {\n      updateState();\n    }\n  }, [props.icon, mounted]);\n  // Render icon\n  const {\n    name,\n    data\n  } = state;\n  if (!data) {\n    return props.children ? props.children : props.fallback ? props.fallback : createElement('span', {});\n  }\n  return render(_objectSpread(_objectSpread({}, defaultIconProps), data), props, name);\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = forwardRef((props, ref) => IconComponent(_objectSpread(_objectSpread({}, props), {}, {\n  _ref: ref\n})));\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = forwardRef((props, ref) => IconComponent(_objectSpread(_objectSpread({\n  inline: true\n}, props), {}, {\n  _ref: ref\n})));\n/**\n * Internal API\n */\nconst _api = {\n  getAPIConfig,\n  setAPIModule,\n  sendAPIQuery,\n  setFetch,\n  getFetch,\n  listAPIProviders\n};\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconLoaded as iconExists, iconLoaded, listIcons, loadIcon, loadIcons, replaceIDs, setCustomIconLoader, setCustomIconsLoader };","map":{"version":3,"names":["_objectSpread","createElement","forwardRef","useState","useEffect","defaultIconDimensions","Object","freeze","left","top","width","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","defaultExtendedIconProps","body","hidden","mergeIconTransformations","obj1","obj2","result","mergeIconData","parent","child","key","getIconsTree","data","names","icons","aliases","create","resolved","resolve","name","value","concat","keys","forEach","internalGetIconData","tree","currentProps","parse","name2","parseIconSet","callback","not_found","Array","push","item","optionalPropertyDefaults","provider","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","prefix","icon","matchIconName","stringToIcon","validate","allowSimpleName","arguments","length","undefined","colonSeparated","split","slice","shift","pop","validateIconName","dashSeparated","join","dataStorage","newStorage","missing","Set","getStorage","providerStorage","addIconSet","storage","add","addIconToStorage","err","listIcons","allIcons","providers","provider2","prefixes","prefix2","map","simpleNames","allowSimpleNames","allow","getIconData","iconName","has","addIcon","addCollection","added","iconLoaded","getIcon","defaultIconSizeCustomisations","defaultIconCustomisations","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","splitSVGDefs","content","tag","defs","index","indexOf","start","end","endEnd","trim","mergeDefsAndContent","wrapSVGContent","isUnsetKeyword","iconToSVG","customisations","fullIcon","fullCustomisations","box","props","transformations","rotation","toString","tempValue","floor","unshift","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","setAttr","viewBox","regex","randomPrefix","Date","now","random","counter","replaceIDs","ids","match","exec","suffix","id","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","listAPIProviders","detectFetch","fetch","fetchModule","setFetch","fetch2","getFetch","calculateMaxLength","maxHostLength","host","max","url","shouldAbort","status","prepare","results","maxLength","type","getPath","send","params","iconsList","urlParams","URLSearchParams","uri","defaultError","then","response","setTimeout","json","catch","fetchAPIModule","sortIcons","loaded","pending","sort","a","b","localeCompare","lastIcon","localStorage","list","removeCallback","storages","items","loaderCallbacks","filter","row","updateCallbacks","pendingCallbacksFlag","hasPending","oldLength","abort","idCounter","storeCallback","pendingSources","bind","listToIcons","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","nextIndex","startTime","queriesSent","lastError","timer","queue","doneCallbacks","resetTimer","clearTimeout","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","moduleResponse","isError","queued","execNext","resource","status2","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query2","error","find","instance","setIndex","getIndex","emptyCallback$1","redundancyCache","getRedundancyCache","redundancy","cachedReundancy","sendAPIQuery","target","api","cached","moduleKey","emptyCallback","loadedNewIcons","iconsLoaderFlag","checkIconNamesForAPI","valid","invalid","parseLoaderResponse","checkMissing","pendingIcons","delete","parsed","console","parsePossiblyAsyncResponse","Promise","loadNewIcons","iconsToLoad","iconsQueueFlag","icons2","customIconLoader","loadIcon","loadIcons","iconSet","cleanedIcons","sortedIcons","callCallback","newIcons","sources","lastProvider","lastPrefix","providerNewIcons","pendingQueue","fulfill","reject","iconObj","setCustomIconsLoader","loader","setCustomIconLoader","mergeCustomisations","valueType","separator","flipFromString","custom","flip","str","rotateFromString","defaultValue","units","value2","parseInt","iconToHTML","renderAttribsHTML","attr","encodeSVGforURL","svg","svgToData","svgToURL","policy","createPolicy","window","trustedTypes","createHTML","s","cleanUpInnerHTML","html","defaultExtendedIconCustomisations","inline","svgDefaults","commonProps","display","monotoneProps","backgroundColor","coloredProps","propsToAdd","Image","Repeat","Size","propsToAddTo","WebkitMask","mask","background","inlineDefaults","fixSize","render","defaultProps","mode","style","customStyle","componentProps","classNames","className","ref","color","renderAttribs","verticalAlign","assign","localCounter","dangerouslySetInnerHTML","__html","useMask","enableCache","disableCache","document","_window","IconifyPreload","preload","e","IconifyProviders","IconComponent","mounted","setMounted","ssr","setAbort","getInitialState","state","setState","changeState","newState","JSON","stringify","updateState","_a","onLoad","call","children","fallback","Icon","_ref","InlineIcon","_api","buildIcon","iconExists"],"sources":["/Users/alexmario/Desktop/Dj Suru/node_modules/@iconify/react/dist/iconify.js"],"sourcesContent":["'use client';\n\nimport { createElement, forwardRef, useState, useEffect } from 'react';\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (\n      // Name cannot be empty\n      !name || // Must have body\n      typeof icon.body !== \"string\" || // Check other props\n      !checkOptionalProps(\n        icon,\n        defaultExtendedIconProps\n      )\n    ) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (\n      // Name cannot be empty\n      !name || // Parent must be set and point to existing icon\n      typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || // Check other props\n      !checkOptionalProps(\n        icon,\n        defaultExtendedIconProps\n      )\n    ) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!// Check prefix: cannot be empty, unless allowSimpleName is enabled\n  // Check name: cannot be empty\n  ((allowSimpleName && icon.prefix === \"\" || !!icon.prefix) && !!icon.name);\n};\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  if (data) {\n    return addIconToStorage(storage, icon.name, data);\n  } else {\n    storage.missing.add(icon.name);\n    return true;\n  }\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconLoaded(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : result;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nfunction splitSVGDefs(content, tag = \"defs\") {\n  let defs = \"\";\n  const index = content.indexOf(\"<\" + tag);\n  while (index >= 0) {\n    const start = content.indexOf(\">\", index);\n    const end = content.indexOf(\"</\" + tag);\n    if (start === -1 || end === -1) {\n      break;\n    }\n    const endEnd = content.indexOf(\">\", end);\n    if (endEnd === -1) {\n      break;\n    }\n    defs += content.slice(start + 1, end).trim();\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n  }\n  return {\n    defs,\n    content\n  };\n}\nfunction mergeDefsAndContent(defs, content) {\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\nfunction wrapSVGContent(body, start, end) {\n  const split = splitSVGDefs(body);\n  return mergeDefsAndContent(split.defs, start + split.content + end);\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = wrapSVGContent(\n        body,\n        '<g transform=\"' + transformations.join(\" \") + '\">',\n        \"</g>\"\n      );\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  const viewBox = [box.left, box.top, boxWidth, boxHeight];\n  attributes.viewBox = viewBox.join(\" \");\n  return {\n    attributes,\n    viewBox,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      // Allowed characters before id: [#;\"]\n      // Allowed characters after id: [)\"], .[a-z]\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + suffix + \"$3\"\n    );\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction checkIconNamesForAPI(icons) {\n  const valid = [];\n  const invalid = [];\n  icons.forEach((name) => {\n    (name.match(matchIconName) ? valid : invalid).push(name);\n  });\n  return {\n    valid,\n    invalid\n  };\n}\nfunction parseLoaderResponse(storage, icons, data) {\n  function checkMissing() {\n    const pending = storage.pendingIcons;\n    icons.forEach((name) => {\n      if (pending) {\n        pending.delete(name);\n      }\n      if (!storage.icons[name]) {\n        storage.missing.add(name);\n      }\n    });\n  }\n  if (data && typeof data === \"object\") {\n    try {\n      const parsed = addIconSet(storage, data);\n      if (!parsed.length) {\n        checkMissing();\n        return;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  checkMissing();\n  loadedNewIcons(storage);\n}\nfunction parsePossiblyAsyncResponse(response, callback) {\n  if (response instanceof Promise) {\n    response.then((data) => {\n      callback(data);\n    }).catch(() => {\n      callback(null);\n    });\n  } else {\n    callback(response);\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      if (!icons2 || !icons2.length) {\n        return;\n      }\n      const customIconLoader = storage.loadIcon;\n      if (storage.loadIcons && (icons2.length > 1 || !customIconLoader)) {\n        parsePossiblyAsyncResponse(\n          storage.loadIcons(icons2, prefix, provider),\n          (data) => {\n            parseLoaderResponse(storage, icons2, data);\n          }\n        );\n        return;\n      }\n      if (customIconLoader) {\n        icons2.forEach((name) => {\n          const response = customIconLoader(name, prefix, provider);\n          parsePossiblyAsyncResponse(response, (data) => {\n            const iconSet = data ? {\n              prefix,\n              icons: {\n                [name]: data\n              }\n            } : null;\n            parseLoaderResponse(storage, [name], iconSet);\n          });\n        });\n        return;\n      }\n      const { valid, invalid } = checkIconNamesForAPI(icons2);\n      if (invalid.length) {\n        parseLoaderResponse(storage, invalid, null);\n      }\n      if (!valid.length) {\n        return;\n      }\n      const api = prefix.match(matchIconName) ? getAPIModule(provider) : null;\n      if (!api) {\n        parseLoaderResponse(storage, valid, null);\n        return;\n      }\n      const params = api.prepare(provider, prefix, valid);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          parseLoaderResponse(storage, item.icons, data);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const list = newIcons[storage.provider][storage.prefix];\n    if (list.length) {\n      loadNewIcons(storage, list);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction setCustomIconsLoader(loader, prefix, provider) {\n  getStorage(provider || \"\", prefix).loadIcons = loader;\n}\nfunction setCustomIconLoader(loader, prefix, provider) {\n  getStorage(provider || \"\", prefix).loadIcon = loader;\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\nlet policy;\nfunction createPolicy() {\n  try {\n    policy = window.trustedTypes.createPolicy(\"iconify\", {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      createHTML: (s) => s\n    });\n  } catch (err) {\n    policy = null;\n  }\n}\nfunction cleanUpInnerHTML(html) {\n  if (policy === void 0) {\n    createPolicy();\n  }\n  return policy ? policy.createHTML(html) : html;\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    backgroundColor: 'currentColor',\n};\nconst coloredProps = {\n    backgroundColor: 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    Image: 'var(--svg)',\n    Repeat: 'no-repeat',\n    Size: '100% 100%',\n};\nconst propsToAddTo = {\n    WebkitMask: monotoneProps,\n    mask: monotoneProps,\n    background: coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = {\n    ...defaultExtendedIconCustomisations,\n    inline: true,\n};\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// Icon name\nname) => {\n    // Get default properties\n    const defaultProps = props.inline\n        ? inlineDefaults\n        : defaultExtendedIconCustomisations;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Check mode\n    const mode = props.mode || 'svg';\n    // Create style\n    const style = {};\n    const customStyle = props.style || {};\n    // Create SVG component properties\n    const componentProps = {\n        ...(mode === 'svg' ? svgDefaults : {}),\n    };\n    if (name) {\n        const iconName = stringToIcon(name, false, true);\n        if (iconName) {\n            const classNames = ['iconify'];\n            const props = [\n                'provider',\n                'prefix',\n            ];\n            for (const prop of props) {\n                if (iconName[prop]) {\n                    classNames.push('iconify--' + iconName[prop]);\n                }\n            }\n            componentProps.className = classNames.join(' ');\n        }\n    }\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case 'mode':\n            case 'ssr':\n                break;\n            // Forward ref\n            case '_ref':\n                componentProps.ref = value;\n                break;\n            // Merge class names\n            case 'className':\n                componentProps[key] =\n                    (componentProps[key] ? componentProps[key] + ' ' : '') +\n                        value;\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    if (mode === 'svg') {\n        // Add style\n        componentProps.style = {\n            ...style,\n            ...customStyle,\n        };\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Add icon stuff\n        componentProps.dangerouslySetInnerHTML = {\n            __html: cleanUpInnerHTML(replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact')),\n        };\n        return createElement('svg', componentProps);\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    componentProps.style = {\n        ...style,\n        '--svg': svgToURL(html),\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...commonProps,\n        ...(useMask ? monotoneProps : coloredProps),\n        ...customStyle,\n    };\n    return createElement('span', componentProps);\n};\n\n/**\n * Enable cache\n *\n * @deprecated No longer used\n */\nfunction enableCache(storage) {\n    //\n}\n/**\n * Disable cache\n *\n * @deprecated No longer used\n */\nfunction disableCache(storage) {\n    //\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nfunction IconComponent(props) {\n    const [mounted, setMounted] = useState(!!props.ssr);\n    const [abort, setAbort] = useState({});\n    // Get initial state\n    function getInitialState(mounted) {\n        if (mounted) {\n            const name = props.icon;\n            if (typeof name === 'object') {\n                // Icon as object\n                return {\n                    name: '',\n                    data: name,\n                };\n            }\n            const data = getIconData(name);\n            if (data) {\n                return {\n                    name,\n                    data,\n                };\n            }\n        }\n        return {\n            name: '',\n        };\n    }\n    const [state, setState] = useState(getInitialState(!!props.ssr));\n    // Cancel loading\n    function cleanup() {\n        const callback = abort.callback;\n        if (callback) {\n            callback();\n            setAbort({});\n        }\n    }\n    // Change state if it is different\n    function changeState(newState) {\n        if (JSON.stringify(state) !== JSON.stringify(newState)) {\n            cleanup();\n            setState(newState);\n            return true;\n        }\n    }\n    // Update state\n    function updateState() {\n        var _a;\n        const name = props.icon;\n        if (typeof name === 'object') {\n            // Icon as object\n            changeState({\n                name: '',\n                data: name,\n            });\n            return;\n        }\n        // New icon or got icon data\n        const data = getIconData(name);\n        if (changeState({\n            name,\n            data,\n        })) {\n            if (data === undefined) {\n                // Load icon, update state when done\n                const callback = loadIcons([name], updateState);\n                setAbort({\n                    callback,\n                });\n            }\n            else if (data) {\n                // Icon data is available: trigger onLoad callback if present\n                (_a = props.onLoad) === null || _a === void 0 ? void 0 : _a.call(props, name);\n            }\n        }\n    }\n    // Mounted state, cleanup for loader\n    useEffect(() => {\n        setMounted(true);\n        return cleanup;\n    }, []);\n    // Icon changed or component mounted\n    useEffect(() => {\n        if (mounted) {\n            updateState();\n        }\n    }, [props.icon, mounted]);\n    // Render icon\n    const { name, data } = state;\n    if (!data) {\n        return props.children\n            ? props.children\n            : props.fallback\n                ? props.fallback\n                : createElement('span', {});\n    }\n    return render({\n        ...defaultIconProps,\n        ...data,\n    }, props, name);\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = forwardRef((props, ref) => IconComponent({\n    ...props,\n    _ref: ref,\n}));\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = forwardRef((props, ref) => IconComponent({\n    inline: true,\n    ...props,\n    _ref: ref,\n}));\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconLoaded as iconExists, iconLoaded, listIcons, loadIcon, loadIcons, replaceIDs, setCustomIconLoader, setCustomIconsLoader };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}