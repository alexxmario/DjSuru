{"ast":null,"code":"import _defineProperty from \"/Users/alexmario/Desktop/Dj Suru/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Component, forwardRef } from 'react';\nimport { getPosX, throttle } from './utils';\nclass ProgressBar extends Component {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"timeOnMouseMove\", 0);\n    _defineProperty(this, \"hasAddedAudioEventListener\", false);\n    _defineProperty(this, \"state\", {\n      isDraggingProgress: false,\n      currentTimePos: '0%',\n      hasDownloadProgressAnimation: false,\n      downloadProgressArr: [],\n      waitingForSeekCallback: false\n    });\n    _defineProperty(this, \"getCurrentProgress\", event => {\n      const {\n        audio,\n        progressBar\n      } = this.props;\n      const isSingleFileProgressiveDownload = audio.src.indexOf('blob:') !== 0 && typeof this.props.srcDuration === 'undefined';\n      if (isSingleFileProgressiveDownload && (!audio.src || !isFinite(audio.currentTime) || !progressBar.current)) {\n        return {\n          currentTime: 0,\n          currentTimePos: '0%'\n        };\n      }\n      const progressBarRect = progressBar.current.getBoundingClientRect();\n      const maxRelativePos = progressBarRect.width;\n      let relativePos = getPosX(event) - progressBarRect.left;\n      if (relativePos < 0) {\n        relativePos = 0;\n      } else if (relativePos > maxRelativePos) {\n        relativePos = maxRelativePos;\n      }\n      const duration = this.getDuration();\n      const currentTime = duration * relativePos / maxRelativePos;\n      return {\n        currentTime,\n        currentTimePos: \"\".concat((relativePos / maxRelativePos * 100).toFixed(2), \"%\")\n      };\n    });\n    _defineProperty(this, \"handleContextMenu\", event => {\n      event.preventDefault();\n    });\n    _defineProperty(this, \"handleMouseDownOrTouchStartProgressBar\", event => {\n      event.stopPropagation();\n      const {\n        currentTime,\n        currentTimePos\n      } = this.getCurrentProgress(event.nativeEvent);\n      if (isFinite(currentTime)) {\n        this.timeOnMouseMove = currentTime;\n        this.setState({\n          isDraggingProgress: true,\n          currentTimePos\n        });\n        if (event.nativeEvent instanceof MouseEvent) {\n          window.addEventListener('mousemove', this.handleWindowMouseOrTouchMove);\n          window.addEventListener('mouseup', this.handleWindowMouseOrTouchUp);\n        } else {\n          window.addEventListener('touchmove', this.handleWindowMouseOrTouchMove);\n          window.addEventListener('touchend', this.handleWindowMouseOrTouchUp);\n        }\n      }\n    });\n    _defineProperty(this, \"handleWindowMouseOrTouchMove\", event => {\n      if (event instanceof MouseEvent) {\n        event.preventDefault();\n      }\n      event.stopPropagation();\n      const windowSelection = window.getSelection();\n      if (windowSelection && windowSelection.type === 'Range') {\n        windowSelection.empty();\n      }\n      const {\n        isDraggingProgress\n      } = this.state;\n      if (isDraggingProgress) {\n        const {\n          currentTime,\n          currentTimePos\n        } = this.getCurrentProgress(event);\n        this.timeOnMouseMove = currentTime;\n        this.setState({\n          currentTimePos\n        });\n      }\n    });\n    _defineProperty(this, \"handleWindowMouseOrTouchUp\", event => {\n      event.stopPropagation();\n      const newTime = this.timeOnMouseMove;\n      const {\n        audio,\n        onChangeCurrentTimeError,\n        onSeek\n      } = this.props;\n      if (onSeek) {\n        this.setState({\n          isDraggingProgress: false,\n          waitingForSeekCallback: true\n        }, () => {\n          onSeek(audio, newTime).then(() => this.setState({\n            waitingForSeekCallback: false\n          }), err => {\n            throw new Error(err);\n          });\n        });\n      } else {\n        const newProps = {\n          isDraggingProgress: false\n        };\n        if (audio.readyState === audio.HAVE_NOTHING || audio.readyState === audio.HAVE_METADATA || !isFinite(newTime)) {\n          try {\n            audio.load();\n          } catch (err) {\n            newProps.currentTimePos = '0%';\n            return onChangeCurrentTimeError && onChangeCurrentTimeError(err);\n          }\n        }\n        audio.currentTime = newTime;\n        this.setState(newProps);\n      }\n      if (event instanceof MouseEvent) {\n        window.removeEventListener('mousemove', this.handleWindowMouseOrTouchMove);\n        window.removeEventListener('mouseup', this.handleWindowMouseOrTouchUp);\n      } else {\n        window.removeEventListener('touchmove', this.handleWindowMouseOrTouchMove);\n        window.removeEventListener('touchend', this.handleWindowMouseOrTouchUp);\n      }\n    });\n    _defineProperty(this, \"handleAudioTimeUpdate\", (() => throttle(e => {\n      const {\n        isDraggingProgress\n      } = this.state;\n      const audio = e.target;\n      if (isDraggingProgress || this.state.waitingForSeekCallback === true) return;\n      const {\n        currentTime\n      } = audio;\n      const duration = this.getDuration();\n      this.setState({\n        currentTimePos: \"\".concat((currentTime / duration * 100 || 0).toFixed(2), \"%\")\n      });\n    }, this.props.progressUpdateInterval))());\n    _defineProperty(this, \"handleAudioDownloadProgressUpdate\", e => {\n      const audio = e.target;\n      const duration = this.getDuration();\n      const downloadProgressArr = [];\n      for (let i = 0; i < audio.buffered.length; i++) {\n        const bufferedStart = audio.buffered.start(i);\n        const bufferedEnd = audio.buffered.end(i);\n        downloadProgressArr.push({\n          left: \"\".concat(Math.round(100 / duration * bufferedStart) || 0, \"%\"),\n          width: \"\".concat(Math.round(100 / duration * (bufferedEnd - bufferedStart)) || 0, \"%\")\n        });\n      }\n      clearTimeout(this.downloadProgressAnimationTimer);\n      this.setState({\n        downloadProgressArr,\n        hasDownloadProgressAnimation: true\n      });\n      this.downloadProgressAnimationTimer = setTimeout(() => {\n        this.setState({\n          hasDownloadProgressAnimation: false\n        });\n      }, 200);\n    });\n  }\n  getDuration() {\n    const {\n      audio,\n      srcDuration\n    } = this.props;\n    return typeof srcDuration === 'undefined' ? audio.duration : srcDuration;\n  }\n  initialize() {\n    const {\n      audio\n    } = this.props;\n    if (audio && !this.hasAddedAudioEventListener) {\n      this.audio = audio;\n      this.hasAddedAudioEventListener = true;\n      audio.addEventListener('timeupdate', this.handleAudioTimeUpdate);\n      audio.addEventListener('progress', this.handleAudioDownloadProgressUpdate);\n    }\n  }\n  componentDidMount() {\n    this.initialize();\n  }\n  componentDidUpdate() {\n    this.initialize();\n  }\n  componentWillUnmount() {\n    if (this.audio && this.hasAddedAudioEventListener) {\n      this.audio.removeEventListener('timeupdate', this.handleAudioTimeUpdate);\n      this.audio.removeEventListener('progress', this.handleAudioDownloadProgressUpdate);\n    }\n    clearTimeout(this.downloadProgressAnimationTimer);\n  }\n  render() {\n    const {\n      showDownloadProgress,\n      showFilledProgress,\n      progressBar,\n      i18nProgressBar\n    } = this.props;\n    const {\n      currentTimePos,\n      downloadProgressArr,\n      hasDownloadProgressAnimation\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"rhap_progress-container\",\n      ref: progressBar,\n      \"aria-label\": i18nProgressBar,\n      role: \"progressbar\",\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": 100,\n      \"aria-valuenow\": Number(currentTimePos.split('%')[0]),\n      tabIndex: 0,\n      onMouseDown: this.handleMouseDownOrTouchStartProgressBar,\n      onTouchStart: this.handleMouseDownOrTouchStartProgressBar,\n      onContextMenu: this.handleContextMenu\n    }, React.createElement(\"div\", {\n      className: \"rhap_progress-bar \".concat(showDownloadProgress ? 'rhap_progress-bar-show-download' : '')\n    }, React.createElement(\"div\", {\n      className: \"rhap_progress-indicator\",\n      style: {\n        left: currentTimePos\n      }\n    }), showFilledProgress && React.createElement(\"div\", {\n      className: \"rhap_progress-filled\",\n      style: {\n        width: currentTimePos\n      }\n    }), showDownloadProgress && downloadProgressArr.map((_ref, i) => {\n      let {\n        left,\n        width\n      } = _ref;\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"rhap_download-progress\",\n        style: {\n          left,\n          width,\n          transitionDuration: hasDownloadProgressAnimation ? '.2s' : '0s'\n        }\n      });\n    })));\n  }\n}\nconst ProgressBarForwardRef = (props, ref) => React.createElement(ProgressBar, _extends({}, props, {\n  progressBar: ref\n}));\nexport default forwardRef(ProgressBarForwardRef);\nexport { ProgressBar, ProgressBarForwardRef };","map":{"version":3,"names":["_extends","React","Component","forwardRef","getPosX","throttle","ProgressBar","constructor","arguments","_defineProperty","isDraggingProgress","currentTimePos","hasDownloadProgressAnimation","downloadProgressArr","waitingForSeekCallback","event","audio","progressBar","props","isSingleFileProgressiveDownload","src","indexOf","srcDuration","isFinite","currentTime","current","progressBarRect","getBoundingClientRect","maxRelativePos","width","relativePos","left","duration","getDuration","concat","toFixed","preventDefault","stopPropagation","getCurrentProgress","nativeEvent","timeOnMouseMove","setState","MouseEvent","window","addEventListener","handleWindowMouseOrTouchMove","handleWindowMouseOrTouchUp","windowSelection","getSelection","type","empty","state","newTime","onChangeCurrentTimeError","onSeek","then","err","Error","newProps","readyState","HAVE_NOTHING","HAVE_METADATA","load","removeEventListener","e","target","progressUpdateInterval","i","buffered","length","bufferedStart","start","bufferedEnd","end","push","Math","round","clearTimeout","downloadProgressAnimationTimer","setTimeout","initialize","hasAddedAudioEventListener","handleAudioTimeUpdate","handleAudioDownloadProgressUpdate","componentDidMount","componentDidUpdate","componentWillUnmount","render","showDownloadProgress","showFilledProgress","i18nProgressBar","createElement","className","ref","role","Number","split","tabIndex","onMouseDown","handleMouseDownOrTouchStartProgressBar","onTouchStart","onContextMenu","handleContextMenu","style","map","_ref","key","transitionDuration","ProgressBarForwardRef"],"sources":["/Users/alexmario/Desktop/Dj Suru/node_modules/react-h5-audio-player/es/ProgressBar.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Component, forwardRef } from 'react';\nimport { getPosX, throttle } from './utils';\nclass ProgressBar extends Component {\n  timeOnMouseMove = 0;\n  hasAddedAudioEventListener = false;\n  state = {\n    isDraggingProgress: false,\n    currentTimePos: '0%',\n    hasDownloadProgressAnimation: false,\n    downloadProgressArr: [],\n    waitingForSeekCallback: false\n  };\n  getDuration() {\n    const {\n      audio,\n      srcDuration\n    } = this.props;\n    return typeof srcDuration === 'undefined' ? audio.duration : srcDuration;\n  }\n  getCurrentProgress = event => {\n    const {\n      audio,\n      progressBar\n    } = this.props;\n    const isSingleFileProgressiveDownload = audio.src.indexOf('blob:') !== 0 && typeof this.props.srcDuration === 'undefined';\n    if (isSingleFileProgressiveDownload && (!audio.src || !isFinite(audio.currentTime) || !progressBar.current)) {\n      return {\n        currentTime: 0,\n        currentTimePos: '0%'\n      };\n    }\n    const progressBarRect = progressBar.current.getBoundingClientRect();\n    const maxRelativePos = progressBarRect.width;\n    let relativePos = getPosX(event) - progressBarRect.left;\n    if (relativePos < 0) {\n      relativePos = 0;\n    } else if (relativePos > maxRelativePos) {\n      relativePos = maxRelativePos;\n    }\n    const duration = this.getDuration();\n    const currentTime = duration * relativePos / maxRelativePos;\n    return {\n      currentTime,\n      currentTimePos: `${(relativePos / maxRelativePos * 100).toFixed(2)}%`\n    };\n  };\n  handleContextMenu = event => {\n    event.preventDefault();\n  };\n  handleMouseDownOrTouchStartProgressBar = event => {\n    event.stopPropagation();\n    const {\n      currentTime,\n      currentTimePos\n    } = this.getCurrentProgress(event.nativeEvent);\n    if (isFinite(currentTime)) {\n      this.timeOnMouseMove = currentTime;\n      this.setState({\n        isDraggingProgress: true,\n        currentTimePos\n      });\n      if (event.nativeEvent instanceof MouseEvent) {\n        window.addEventListener('mousemove', this.handleWindowMouseOrTouchMove);\n        window.addEventListener('mouseup', this.handleWindowMouseOrTouchUp);\n      } else {\n        window.addEventListener('touchmove', this.handleWindowMouseOrTouchMove);\n        window.addEventListener('touchend', this.handleWindowMouseOrTouchUp);\n      }\n    }\n  };\n  handleWindowMouseOrTouchMove = event => {\n    if (event instanceof MouseEvent) {\n      event.preventDefault();\n    }\n    event.stopPropagation();\n    const windowSelection = window.getSelection();\n    if (windowSelection && windowSelection.type === 'Range') {\n      windowSelection.empty();\n    }\n    const {\n      isDraggingProgress\n    } = this.state;\n    if (isDraggingProgress) {\n      const {\n        currentTime,\n        currentTimePos\n      } = this.getCurrentProgress(event);\n      this.timeOnMouseMove = currentTime;\n      this.setState({\n        currentTimePos\n      });\n    }\n  };\n  handleWindowMouseOrTouchUp = event => {\n    event.stopPropagation();\n    const newTime = this.timeOnMouseMove;\n    const {\n      audio,\n      onChangeCurrentTimeError,\n      onSeek\n    } = this.props;\n    if (onSeek) {\n      this.setState({\n        isDraggingProgress: false,\n        waitingForSeekCallback: true\n      }, () => {\n        onSeek(audio, newTime).then(() => this.setState({\n          waitingForSeekCallback: false\n        }), err => {\n          throw new Error(err);\n        });\n      });\n    } else {\n      const newProps = {\n        isDraggingProgress: false\n      };\n      if (audio.readyState === audio.HAVE_NOTHING || audio.readyState === audio.HAVE_METADATA || !isFinite(newTime)) {\n        try {\n          audio.load();\n        } catch (err) {\n          newProps.currentTimePos = '0%';\n          return onChangeCurrentTimeError && onChangeCurrentTimeError(err);\n        }\n      }\n      audio.currentTime = newTime;\n      this.setState(newProps);\n    }\n    if (event instanceof MouseEvent) {\n      window.removeEventListener('mousemove', this.handleWindowMouseOrTouchMove);\n      window.removeEventListener('mouseup', this.handleWindowMouseOrTouchUp);\n    } else {\n      window.removeEventListener('touchmove', this.handleWindowMouseOrTouchMove);\n      window.removeEventListener('touchend', this.handleWindowMouseOrTouchUp);\n    }\n  };\n  handleAudioTimeUpdate = (() => throttle(e => {\n    const {\n      isDraggingProgress\n    } = this.state;\n    const audio = e.target;\n    if (isDraggingProgress || this.state.waitingForSeekCallback === true) return;\n    const {\n      currentTime\n    } = audio;\n    const duration = this.getDuration();\n    this.setState({\n      currentTimePos: `${(currentTime / duration * 100 || 0).toFixed(2)}%`\n    });\n  }, this.props.progressUpdateInterval))();\n  handleAudioDownloadProgressUpdate = e => {\n    const audio = e.target;\n    const duration = this.getDuration();\n    const downloadProgressArr = [];\n    for (let i = 0; i < audio.buffered.length; i++) {\n      const bufferedStart = audio.buffered.start(i);\n      const bufferedEnd = audio.buffered.end(i);\n      downloadProgressArr.push({\n        left: `${Math.round(100 / duration * bufferedStart) || 0}%`,\n        width: `${Math.round(100 / duration * (bufferedEnd - bufferedStart)) || 0}%`\n      });\n    }\n    clearTimeout(this.downloadProgressAnimationTimer);\n    this.setState({\n      downloadProgressArr,\n      hasDownloadProgressAnimation: true\n    });\n    this.downloadProgressAnimationTimer = setTimeout(() => {\n      this.setState({\n        hasDownloadProgressAnimation: false\n      });\n    }, 200);\n  };\n  initialize() {\n    const {\n      audio\n    } = this.props;\n    if (audio && !this.hasAddedAudioEventListener) {\n      this.audio = audio;\n      this.hasAddedAudioEventListener = true;\n      audio.addEventListener('timeupdate', this.handleAudioTimeUpdate);\n      audio.addEventListener('progress', this.handleAudioDownloadProgressUpdate);\n    }\n  }\n  componentDidMount() {\n    this.initialize();\n  }\n  componentDidUpdate() {\n    this.initialize();\n  }\n  componentWillUnmount() {\n    if (this.audio && this.hasAddedAudioEventListener) {\n      this.audio.removeEventListener('timeupdate', this.handleAudioTimeUpdate);\n      this.audio.removeEventListener('progress', this.handleAudioDownloadProgressUpdate);\n    }\n    clearTimeout(this.downloadProgressAnimationTimer);\n  }\n  render() {\n    const {\n      showDownloadProgress,\n      showFilledProgress,\n      progressBar,\n      i18nProgressBar\n    } = this.props;\n    const {\n      currentTimePos,\n      downloadProgressArr,\n      hasDownloadProgressAnimation\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"rhap_progress-container\",\n      ref: progressBar,\n      \"aria-label\": i18nProgressBar,\n      role: \"progressbar\",\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": 100,\n      \"aria-valuenow\": Number(currentTimePos.split('%')[0]),\n      tabIndex: 0,\n      onMouseDown: this.handleMouseDownOrTouchStartProgressBar,\n      onTouchStart: this.handleMouseDownOrTouchStartProgressBar,\n      onContextMenu: this.handleContextMenu\n    }, React.createElement(\"div\", {\n      className: `rhap_progress-bar ${showDownloadProgress ? 'rhap_progress-bar-show-download' : ''}`\n    }, React.createElement(\"div\", {\n      className: \"rhap_progress-indicator\",\n      style: {\n        left: currentTimePos\n      }\n    }), showFilledProgress && React.createElement(\"div\", {\n      className: \"rhap_progress-filled\",\n      style: {\n        width: currentTimePos\n      }\n    }), showDownloadProgress && downloadProgressArr.map((_ref, i) => {\n      let {\n        left,\n        width\n      } = _ref;\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"rhap_download-progress\",\n        style: {\n          left,\n          width,\n          transitionDuration: hasDownloadProgressAnimation ? '.2s' : '0s'\n        }\n      });\n    })));\n  }\n}\nconst ProgressBarForwardRef = (props, ref) => React.createElement(ProgressBar, _extends({}, props, {\n  progressBar: ref\n}));\nexport default forwardRef(ProgressBarForwardRef);\nexport { ProgressBar, ProgressBarForwardRef };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}