{"ast":null,"code":"import { PureComponent } from 'react';\nimport { getDisplayTimeBySeconds } from './utils';\nclass Duration extends PureComponent {\n  hasAddedAudioEventListener = false;\n  constructor(props) {\n    super(props);\n    const {\n      audio,\n      timeFormat,\n      defaultDuration\n    } = props;\n    this.state = {\n      duration: audio ? getDisplayTimeBySeconds(audio.duration, audio.duration, timeFormat) : defaultDuration\n    };\n  }\n  state = (() => ({\n    duration: this.props.audio ? getDisplayTimeBySeconds(this.props.audio.duration, this.props.audio.duration, this.props.timeFormat) : this.props.defaultDuration\n  }))();\n  handleAudioDurationChange = e => {\n    const audio = e.target;\n    const {\n      timeFormat,\n      defaultDuration\n    } = this.props;\n    this.setState({\n      duration: getDisplayTimeBySeconds(audio.duration, audio.duration, timeFormat) || defaultDuration\n    });\n  };\n  addAudioEventListeners = () => {\n    const {\n      audio\n    } = this.props;\n    if (audio && !this.hasAddedAudioEventListener) {\n      this.audio = audio;\n      this.hasAddedAudioEventListener = true;\n      audio.addEventListener('durationchange', this.handleAudioDurationChange);\n      audio.addEventListener('abort', this.handleAudioDurationChange);\n    }\n  };\n  componentDidMount() {\n    this.addAudioEventListeners();\n  }\n  componentDidUpdate() {\n    this.addAudioEventListeners();\n  }\n  componentWillUnmount() {\n    if (this.audio && this.hasAddedAudioEventListener) {\n      this.audio.removeEventListener('durationchange', this.handleAudioDurationChange);\n      this.audio.removeEventListener('abort', this.handleAudioDurationChange);\n    }\n  }\n  render() {\n    return this.state.duration;\n  }\n}\nexport default Duration;","map":{"version":3,"names":["PureComponent","getDisplayTimeBySeconds","Duration","hasAddedAudioEventListener","constructor","props","audio","timeFormat","defaultDuration","state","duration","handleAudioDurationChange","e","target","setState","addAudioEventListeners","addEventListener","componentDidMount","componentDidUpdate","componentWillUnmount","removeEventListener","render"],"sources":["/Users/alexmario/Desktop/Dj Suru/node_modules/react-h5-audio-player/es/Duration.js"],"sourcesContent":["import { PureComponent } from 'react';\nimport { getDisplayTimeBySeconds } from './utils';\nclass Duration extends PureComponent {\n  hasAddedAudioEventListener = false;\n  constructor(props) {\n    super(props);\n    const {\n      audio,\n      timeFormat,\n      defaultDuration\n    } = props;\n    this.state = {\n      duration: audio ? getDisplayTimeBySeconds(audio.duration, audio.duration, timeFormat) : defaultDuration\n    };\n  }\n  state = (() => ({\n    duration: this.props.audio ? getDisplayTimeBySeconds(this.props.audio.duration, this.props.audio.duration, this.props.timeFormat) : this.props.defaultDuration\n  }))();\n  handleAudioDurationChange = e => {\n    const audio = e.target;\n    const {\n      timeFormat,\n      defaultDuration\n    } = this.props;\n    this.setState({\n      duration: getDisplayTimeBySeconds(audio.duration, audio.duration, timeFormat) || defaultDuration\n    });\n  };\n  addAudioEventListeners = () => {\n    const {\n      audio\n    } = this.props;\n    if (audio && !this.hasAddedAudioEventListener) {\n      this.audio = audio;\n      this.hasAddedAudioEventListener = true;\n      audio.addEventListener('durationchange', this.handleAudioDurationChange);\n      audio.addEventListener('abort', this.handleAudioDurationChange);\n    }\n  };\n  componentDidMount() {\n    this.addAudioEventListeners();\n  }\n  componentDidUpdate() {\n    this.addAudioEventListeners();\n  }\n  componentWillUnmount() {\n    if (this.audio && this.hasAddedAudioEventListener) {\n      this.audio.removeEventListener('durationchange', this.handleAudioDurationChange);\n      this.audio.removeEventListener('abort', this.handleAudioDurationChange);\n    }\n  }\n  render() {\n    return this.state.duration;\n  }\n}\nexport default Duration;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,uBAAuB,QAAQ,SAAS;AACjD,MAAMC,QAAQ,SAASF,aAAa,CAAC;EACnCG,0BAA0B,GAAG,KAAK;EAClCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,MAAM;MACJC,KAAK;MACLC,UAAU;MACVC;IACF,CAAC,GAAGH,KAAK;IACT,IAAI,CAACI,KAAK,GAAG;MACXC,QAAQ,EAAEJ,KAAK,GAAGL,uBAAuB,CAACK,KAAK,CAACI,QAAQ,EAAEJ,KAAK,CAACI,QAAQ,EAAEH,UAAU,CAAC,GAAGC;IAC1F,CAAC;EACH;EACAC,KAAK,GAAG,CAAC,OAAO;IACdC,QAAQ,EAAE,IAAI,CAACL,KAAK,CAACC,KAAK,GAAGL,uBAAuB,CAAC,IAAI,CAACI,KAAK,CAACC,KAAK,CAACI,QAAQ,EAAE,IAAI,CAACL,KAAK,CAACC,KAAK,CAACI,QAAQ,EAAE,IAAI,CAACL,KAAK,CAACE,UAAU,CAAC,GAAG,IAAI,CAACF,KAAK,CAACG;EACjJ,CAAC,CAAC,EAAE,CAAC;EACLG,yBAAyB,GAAGC,CAAC,IAAI;IAC/B,MAAMN,KAAK,GAAGM,CAAC,CAACC,MAAM;IACtB,MAAM;MACJN,UAAU;MACVC;IACF,CAAC,GAAG,IAAI,CAACH,KAAK;IACd,IAAI,CAACS,QAAQ,CAAC;MACZJ,QAAQ,EAAET,uBAAuB,CAACK,KAAK,CAACI,QAAQ,EAAEJ,KAAK,CAACI,QAAQ,EAAEH,UAAU,CAAC,IAAIC;IACnF,CAAC,CAAC;EACJ,CAAC;EACDO,sBAAsB,GAAGA,CAAA,KAAM;IAC7B,MAAM;MACJT;IACF,CAAC,GAAG,IAAI,CAACD,KAAK;IACd,IAAIC,KAAK,IAAI,CAAC,IAAI,CAACH,0BAA0B,EAAE;MAC7C,IAAI,CAACG,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACH,0BAA0B,GAAG,IAAI;MACtCG,KAAK,CAACU,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,CAACL,yBAAyB,CAAC;MACxEL,KAAK,CAACU,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACL,yBAAyB,CAAC;IACjE;EACF,CAAC;EACDM,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACF,sBAAsB,CAAC,CAAC;EAC/B;EACAG,kBAAkBA,CAAA,EAAG;IACnB,IAAI,CAACH,sBAAsB,CAAC,CAAC;EAC/B;EACAI,oBAAoBA,CAAA,EAAG;IACrB,IAAI,IAAI,CAACb,KAAK,IAAI,IAAI,CAACH,0BAA0B,EAAE;MACjD,IAAI,CAACG,KAAK,CAACc,mBAAmB,CAAC,gBAAgB,EAAE,IAAI,CAACT,yBAAyB,CAAC;MAChF,IAAI,CAACL,KAAK,CAACc,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACT,yBAAyB,CAAC;IACzE;EACF;EACAU,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACZ,KAAK,CAACC,QAAQ;EAC5B;AACF;AACA,eAAeR,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}