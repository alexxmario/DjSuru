{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Component, forwardRef } from 'react';\nimport { getPosX, throttle } from './utils';\nclass ProgressBar extends Component {\n  timeOnMouseMove = 0;\n  hasAddedAudioEventListener = false;\n  state = {\n    isDraggingProgress: false,\n    currentTimePos: '0%',\n    hasDownloadProgressAnimation: false,\n    downloadProgressArr: [],\n    waitingForSeekCallback: false\n  };\n  getDuration() {\n    const {\n      audio,\n      srcDuration\n    } = this.props;\n    return typeof srcDuration === 'undefined' ? audio.duration : srcDuration;\n  }\n  getCurrentProgress = event => {\n    const {\n      audio,\n      progressBar\n    } = this.props;\n    const isSingleFileProgressiveDownload = audio.src.indexOf('blob:') !== 0 && typeof this.props.srcDuration === 'undefined';\n    if (isSingleFileProgressiveDownload && (!audio.src || !isFinite(audio.currentTime) || !progressBar.current)) {\n      return {\n        currentTime: 0,\n        currentTimePos: '0%'\n      };\n    }\n    const progressBarRect = progressBar.current.getBoundingClientRect();\n    const maxRelativePos = progressBarRect.width;\n    let relativePos = getPosX(event) - progressBarRect.left;\n    if (relativePos < 0) {\n      relativePos = 0;\n    } else if (relativePos > maxRelativePos) {\n      relativePos = maxRelativePos;\n    }\n    const duration = this.getDuration();\n    const currentTime = duration * relativePos / maxRelativePos;\n    return {\n      currentTime,\n      currentTimePos: `${(relativePos / maxRelativePos * 100).toFixed(2)}%`\n    };\n  };\n  handleContextMenu = event => {\n    event.preventDefault();\n  };\n  handleMouseDownOrTouchStartProgressBar = event => {\n    event.stopPropagation();\n    const {\n      currentTime,\n      currentTimePos\n    } = this.getCurrentProgress(event.nativeEvent);\n    if (isFinite(currentTime)) {\n      this.timeOnMouseMove = currentTime;\n      this.setState({\n        isDraggingProgress: true,\n        currentTimePos\n      });\n      if (event.nativeEvent instanceof MouseEvent) {\n        window.addEventListener('mousemove', this.handleWindowMouseOrTouchMove);\n        window.addEventListener('mouseup', this.handleWindowMouseOrTouchUp);\n      } else {\n        window.addEventListener('touchmove', this.handleWindowMouseOrTouchMove);\n        window.addEventListener('touchend', this.handleWindowMouseOrTouchUp);\n      }\n    }\n  };\n  handleWindowMouseOrTouchMove = event => {\n    if (event instanceof MouseEvent) {\n      event.preventDefault();\n    }\n    event.stopPropagation();\n    const windowSelection = window.getSelection();\n    if (windowSelection && windowSelection.type === 'Range') {\n      windowSelection.empty();\n    }\n    const {\n      isDraggingProgress\n    } = this.state;\n    if (isDraggingProgress) {\n      const {\n        currentTime,\n        currentTimePos\n      } = this.getCurrentProgress(event);\n      this.timeOnMouseMove = currentTime;\n      this.setState({\n        currentTimePos\n      });\n    }\n  };\n  handleWindowMouseOrTouchUp = event => {\n    event.stopPropagation();\n    const newTime = this.timeOnMouseMove;\n    const {\n      audio,\n      onChangeCurrentTimeError,\n      onSeek\n    } = this.props;\n    if (onSeek) {\n      this.setState({\n        isDraggingProgress: false,\n        waitingForSeekCallback: true\n      }, () => {\n        onSeek(audio, newTime).then(() => this.setState({\n          waitingForSeekCallback: false\n        }), err => {\n          throw new Error(err);\n        });\n      });\n    } else {\n      const newProps = {\n        isDraggingProgress: false\n      };\n      if (audio.readyState === audio.HAVE_NOTHING || audio.readyState === audio.HAVE_METADATA || !isFinite(newTime)) {\n        try {\n          audio.load();\n        } catch (err) {\n          newProps.currentTimePos = '0%';\n          return onChangeCurrentTimeError && onChangeCurrentTimeError(err);\n        }\n      }\n      audio.currentTime = newTime;\n      this.setState(newProps);\n    }\n    if (event instanceof MouseEvent) {\n      window.removeEventListener('mousemove', this.handleWindowMouseOrTouchMove);\n      window.removeEventListener('mouseup', this.handleWindowMouseOrTouchUp);\n    } else {\n      window.removeEventListener('touchmove', this.handleWindowMouseOrTouchMove);\n      window.removeEventListener('touchend', this.handleWindowMouseOrTouchUp);\n    }\n  };\n  handleAudioTimeUpdate = (() => throttle(e => {\n    const {\n      isDraggingProgress\n    } = this.state;\n    const audio = e.target;\n    if (isDraggingProgress || this.state.waitingForSeekCallback === true) return;\n    const {\n      currentTime\n    } = audio;\n    const duration = this.getDuration();\n    this.setState({\n      currentTimePos: `${(currentTime / duration * 100 || 0).toFixed(2)}%`\n    });\n  }, this.props.progressUpdateInterval))();\n  handleAudioDownloadProgressUpdate = e => {\n    const audio = e.target;\n    const duration = this.getDuration();\n    const downloadProgressArr = [];\n    for (let i = 0; i < audio.buffered.length; i++) {\n      const bufferedStart = audio.buffered.start(i);\n      const bufferedEnd = audio.buffered.end(i);\n      downloadProgressArr.push({\n        left: `${Math.round(100 / duration * bufferedStart) || 0}%`,\n        width: `${Math.round(100 / duration * (bufferedEnd - bufferedStart)) || 0}%`\n      });\n    }\n    clearTimeout(this.downloadProgressAnimationTimer);\n    this.setState({\n      downloadProgressArr,\n      hasDownloadProgressAnimation: true\n    });\n    this.downloadProgressAnimationTimer = setTimeout(() => {\n      this.setState({\n        hasDownloadProgressAnimation: false\n      });\n    }, 200);\n  };\n  initialize() {\n    const {\n      audio\n    } = this.props;\n    if (audio && !this.hasAddedAudioEventListener) {\n      this.audio = audio;\n      this.hasAddedAudioEventListener = true;\n      audio.addEventListener('timeupdate', this.handleAudioTimeUpdate);\n      audio.addEventListener('progress', this.handleAudioDownloadProgressUpdate);\n    }\n  }\n  componentDidMount() {\n    this.initialize();\n  }\n  componentDidUpdate() {\n    this.initialize();\n  }\n  componentWillUnmount() {\n    if (this.audio && this.hasAddedAudioEventListener) {\n      this.audio.removeEventListener('timeupdate', this.handleAudioTimeUpdate);\n      this.audio.removeEventListener('progress', this.handleAudioDownloadProgressUpdate);\n    }\n    clearTimeout(this.downloadProgressAnimationTimer);\n  }\n  render() {\n    const {\n      showDownloadProgress,\n      showFilledProgress,\n      progressBar,\n      i18nProgressBar\n    } = this.props;\n    const {\n      currentTimePos,\n      downloadProgressArr,\n      hasDownloadProgressAnimation\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"rhap_progress-container\",\n      ref: progressBar,\n      \"aria-label\": i18nProgressBar,\n      role: \"progressbar\",\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": 100,\n      \"aria-valuenow\": Number(currentTimePos.split('%')[0]),\n      tabIndex: 0,\n      onMouseDown: this.handleMouseDownOrTouchStartProgressBar,\n      onTouchStart: this.handleMouseDownOrTouchStartProgressBar,\n      onContextMenu: this.handleContextMenu\n    }, React.createElement(\"div\", {\n      className: `rhap_progress-bar ${showDownloadProgress ? 'rhap_progress-bar-show-download' : ''}`\n    }, React.createElement(\"div\", {\n      className: \"rhap_progress-indicator\",\n      style: {\n        left: currentTimePos\n      }\n    }), showFilledProgress && React.createElement(\"div\", {\n      className: \"rhap_progress-filled\",\n      style: {\n        width: currentTimePos\n      }\n    }), showDownloadProgress && downloadProgressArr.map((_ref, i) => {\n      let {\n        left,\n        width\n      } = _ref;\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"rhap_download-progress\",\n        style: {\n          left,\n          width,\n          transitionDuration: hasDownloadProgressAnimation ? '.2s' : '0s'\n        }\n      });\n    })));\n  }\n}\nconst ProgressBarForwardRef = (props, ref) => React.createElement(ProgressBar, _extends({}, props, {\n  progressBar: ref\n}));\nexport default forwardRef(ProgressBarForwardRef);\nexport { ProgressBar, ProgressBarForwardRef };","map":{"version":3,"names":["_extends","React","Component","forwardRef","getPosX","throttle","ProgressBar","timeOnMouseMove","hasAddedAudioEventListener","state","isDraggingProgress","currentTimePos","hasDownloadProgressAnimation","downloadProgressArr","waitingForSeekCallback","getDuration","audio","srcDuration","props","duration","getCurrentProgress","event","progressBar","isSingleFileProgressiveDownload","src","indexOf","isFinite","currentTime","current","progressBarRect","getBoundingClientRect","maxRelativePos","width","relativePos","left","toFixed","handleContextMenu","preventDefault","handleMouseDownOrTouchStartProgressBar","stopPropagation","nativeEvent","setState","MouseEvent","window","addEventListener","handleWindowMouseOrTouchMove","handleWindowMouseOrTouchUp","windowSelection","getSelection","type","empty","newTime","onChangeCurrentTimeError","onSeek","then","err","Error","newProps","readyState","HAVE_NOTHING","HAVE_METADATA","load","removeEventListener","handleAudioTimeUpdate","e","target","progressUpdateInterval","handleAudioDownloadProgressUpdate","i","buffered","length","bufferedStart","start","bufferedEnd","end","push","Math","round","clearTimeout","downloadProgressAnimationTimer","setTimeout","initialize","componentDidMount","componentDidUpdate","componentWillUnmount","render","showDownloadProgress","showFilledProgress","i18nProgressBar","createElement","className","ref","role","Number","split","tabIndex","onMouseDown","onTouchStart","onContextMenu","style","map","_ref","key","transitionDuration","ProgressBarForwardRef"],"sources":["/Users/alexmario/Desktop/Dj Suru/node_modules/react-h5-audio-player/es/ProgressBar.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Component, forwardRef } from 'react';\nimport { getPosX, throttle } from './utils';\nclass ProgressBar extends Component {\n  timeOnMouseMove = 0;\n  hasAddedAudioEventListener = false;\n  state = {\n    isDraggingProgress: false,\n    currentTimePos: '0%',\n    hasDownloadProgressAnimation: false,\n    downloadProgressArr: [],\n    waitingForSeekCallback: false\n  };\n  getDuration() {\n    const {\n      audio,\n      srcDuration\n    } = this.props;\n    return typeof srcDuration === 'undefined' ? audio.duration : srcDuration;\n  }\n  getCurrentProgress = event => {\n    const {\n      audio,\n      progressBar\n    } = this.props;\n    const isSingleFileProgressiveDownload = audio.src.indexOf('blob:') !== 0 && typeof this.props.srcDuration === 'undefined';\n    if (isSingleFileProgressiveDownload && (!audio.src || !isFinite(audio.currentTime) || !progressBar.current)) {\n      return {\n        currentTime: 0,\n        currentTimePos: '0%'\n      };\n    }\n    const progressBarRect = progressBar.current.getBoundingClientRect();\n    const maxRelativePos = progressBarRect.width;\n    let relativePos = getPosX(event) - progressBarRect.left;\n    if (relativePos < 0) {\n      relativePos = 0;\n    } else if (relativePos > maxRelativePos) {\n      relativePos = maxRelativePos;\n    }\n    const duration = this.getDuration();\n    const currentTime = duration * relativePos / maxRelativePos;\n    return {\n      currentTime,\n      currentTimePos: `${(relativePos / maxRelativePos * 100).toFixed(2)}%`\n    };\n  };\n  handleContextMenu = event => {\n    event.preventDefault();\n  };\n  handleMouseDownOrTouchStartProgressBar = event => {\n    event.stopPropagation();\n    const {\n      currentTime,\n      currentTimePos\n    } = this.getCurrentProgress(event.nativeEvent);\n    if (isFinite(currentTime)) {\n      this.timeOnMouseMove = currentTime;\n      this.setState({\n        isDraggingProgress: true,\n        currentTimePos\n      });\n      if (event.nativeEvent instanceof MouseEvent) {\n        window.addEventListener('mousemove', this.handleWindowMouseOrTouchMove);\n        window.addEventListener('mouseup', this.handleWindowMouseOrTouchUp);\n      } else {\n        window.addEventListener('touchmove', this.handleWindowMouseOrTouchMove);\n        window.addEventListener('touchend', this.handleWindowMouseOrTouchUp);\n      }\n    }\n  };\n  handleWindowMouseOrTouchMove = event => {\n    if (event instanceof MouseEvent) {\n      event.preventDefault();\n    }\n    event.stopPropagation();\n    const windowSelection = window.getSelection();\n    if (windowSelection && windowSelection.type === 'Range') {\n      windowSelection.empty();\n    }\n    const {\n      isDraggingProgress\n    } = this.state;\n    if (isDraggingProgress) {\n      const {\n        currentTime,\n        currentTimePos\n      } = this.getCurrentProgress(event);\n      this.timeOnMouseMove = currentTime;\n      this.setState({\n        currentTimePos\n      });\n    }\n  };\n  handleWindowMouseOrTouchUp = event => {\n    event.stopPropagation();\n    const newTime = this.timeOnMouseMove;\n    const {\n      audio,\n      onChangeCurrentTimeError,\n      onSeek\n    } = this.props;\n    if (onSeek) {\n      this.setState({\n        isDraggingProgress: false,\n        waitingForSeekCallback: true\n      }, () => {\n        onSeek(audio, newTime).then(() => this.setState({\n          waitingForSeekCallback: false\n        }), err => {\n          throw new Error(err);\n        });\n      });\n    } else {\n      const newProps = {\n        isDraggingProgress: false\n      };\n      if (audio.readyState === audio.HAVE_NOTHING || audio.readyState === audio.HAVE_METADATA || !isFinite(newTime)) {\n        try {\n          audio.load();\n        } catch (err) {\n          newProps.currentTimePos = '0%';\n          return onChangeCurrentTimeError && onChangeCurrentTimeError(err);\n        }\n      }\n      audio.currentTime = newTime;\n      this.setState(newProps);\n    }\n    if (event instanceof MouseEvent) {\n      window.removeEventListener('mousemove', this.handleWindowMouseOrTouchMove);\n      window.removeEventListener('mouseup', this.handleWindowMouseOrTouchUp);\n    } else {\n      window.removeEventListener('touchmove', this.handleWindowMouseOrTouchMove);\n      window.removeEventListener('touchend', this.handleWindowMouseOrTouchUp);\n    }\n  };\n  handleAudioTimeUpdate = (() => throttle(e => {\n    const {\n      isDraggingProgress\n    } = this.state;\n    const audio = e.target;\n    if (isDraggingProgress || this.state.waitingForSeekCallback === true) return;\n    const {\n      currentTime\n    } = audio;\n    const duration = this.getDuration();\n    this.setState({\n      currentTimePos: `${(currentTime / duration * 100 || 0).toFixed(2)}%`\n    });\n  }, this.props.progressUpdateInterval))();\n  handleAudioDownloadProgressUpdate = e => {\n    const audio = e.target;\n    const duration = this.getDuration();\n    const downloadProgressArr = [];\n    for (let i = 0; i < audio.buffered.length; i++) {\n      const bufferedStart = audio.buffered.start(i);\n      const bufferedEnd = audio.buffered.end(i);\n      downloadProgressArr.push({\n        left: `${Math.round(100 / duration * bufferedStart) || 0}%`,\n        width: `${Math.round(100 / duration * (bufferedEnd - bufferedStart)) || 0}%`\n      });\n    }\n    clearTimeout(this.downloadProgressAnimationTimer);\n    this.setState({\n      downloadProgressArr,\n      hasDownloadProgressAnimation: true\n    });\n    this.downloadProgressAnimationTimer = setTimeout(() => {\n      this.setState({\n        hasDownloadProgressAnimation: false\n      });\n    }, 200);\n  };\n  initialize() {\n    const {\n      audio\n    } = this.props;\n    if (audio && !this.hasAddedAudioEventListener) {\n      this.audio = audio;\n      this.hasAddedAudioEventListener = true;\n      audio.addEventListener('timeupdate', this.handleAudioTimeUpdate);\n      audio.addEventListener('progress', this.handleAudioDownloadProgressUpdate);\n    }\n  }\n  componentDidMount() {\n    this.initialize();\n  }\n  componentDidUpdate() {\n    this.initialize();\n  }\n  componentWillUnmount() {\n    if (this.audio && this.hasAddedAudioEventListener) {\n      this.audio.removeEventListener('timeupdate', this.handleAudioTimeUpdate);\n      this.audio.removeEventListener('progress', this.handleAudioDownloadProgressUpdate);\n    }\n    clearTimeout(this.downloadProgressAnimationTimer);\n  }\n  render() {\n    const {\n      showDownloadProgress,\n      showFilledProgress,\n      progressBar,\n      i18nProgressBar\n    } = this.props;\n    const {\n      currentTimePos,\n      downloadProgressArr,\n      hasDownloadProgressAnimation\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"rhap_progress-container\",\n      ref: progressBar,\n      \"aria-label\": i18nProgressBar,\n      role: \"progressbar\",\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": 100,\n      \"aria-valuenow\": Number(currentTimePos.split('%')[0]),\n      tabIndex: 0,\n      onMouseDown: this.handleMouseDownOrTouchStartProgressBar,\n      onTouchStart: this.handleMouseDownOrTouchStartProgressBar,\n      onContextMenu: this.handleContextMenu\n    }, React.createElement(\"div\", {\n      className: `rhap_progress-bar ${showDownloadProgress ? 'rhap_progress-bar-show-download' : ''}`\n    }, React.createElement(\"div\", {\n      className: \"rhap_progress-indicator\",\n      style: {\n        left: currentTimePos\n      }\n    }), showFilledProgress && React.createElement(\"div\", {\n      className: \"rhap_progress-filled\",\n      style: {\n        width: currentTimePos\n      }\n    }), showDownloadProgress && downloadProgressArr.map((_ref, i) => {\n      let {\n        left,\n        width\n      } = _ref;\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"rhap_download-progress\",\n        style: {\n          left,\n          width,\n          transitionDuration: hasDownloadProgressAnimation ? '.2s' : '0s'\n        }\n      });\n    })));\n  }\n}\nconst ProgressBarForwardRef = (props, ref) => React.createElement(ProgressBar, _extends({}, props, {\n  progressBar: ref\n}));\nexport default forwardRef(ProgressBarForwardRef);\nexport { ProgressBar, ProgressBarForwardRef };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}