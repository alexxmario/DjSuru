{"ast":null,"code":"var _jsxFileName = \"/Users/alexmario/Desktop/Dj Suru/src/components/SplitText.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from 'react';\nimport { gsap } from 'gsap';\nimport { useGSAP } from '@gsap/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SplitText = ({\n  text,\n  className = '',\n  delay = 100,\n  duration = 0.6,\n  ease = 'power3.out',\n  splitType = 'chars',\n  from = {\n    opacity: 0,\n    y: 40\n  },\n  to = {\n    opacity: 1,\n    y: 0\n  },\n  textAlign = 'center',\n  tag = 'p',\n  onLetterAnimationComplete\n}) => {\n  _s();\n  const ref = useRef(null);\n  const [animationKey, setAnimationKey] = useState(0);\n\n  // Simple text splitting function\n  const splitText = (element, type) => {\n    const text = element.textContent;\n    element.innerHTML = '';\n    if (type === 'chars') {\n      return text.split('').map((char, i) => {\n        const span = document.createElement('span');\n        span.textContent = char === ' ' ? '\\u00A0' : char;\n        span.style.display = 'inline-block';\n        span.style.transformOrigin = 'center bottom';\n        element.appendChild(span);\n        return span;\n      });\n    } else if (type === 'words') {\n      return text.split(' ').map((word, i) => {\n        const span = document.createElement('span');\n        span.textContent = word;\n        span.style.display = 'inline-block';\n        span.style.transformOrigin = 'center bottom';\n        span.style.marginRight = '0.25em';\n        element.appendChild(span);\n        return span;\n      });\n    }\n    return [element];\n  };\n  useGSAP(() => {\n    if (!ref.current || !text) return;\n    const el = ref.current;\n\n    // Clear previous content\n    el.innerHTML = text;\n\n    // Split the text\n    const targets = splitText(el, splitType);\n\n    // Set initial state\n    gsap.set(targets, from);\n\n    // Animate\n    gsap.to(targets, {\n      ...to,\n      duration,\n      ease,\n      stagger: delay / 1000,\n      onComplete: () => {\n        onLetterAnimationComplete === null || onLetterAnimationComplete === void 0 ? void 0 : onLetterAnimationComplete();\n      }\n    });\n  }, {\n    dependencies: [text, animationKey],\n    scope: ref\n  });\n\n  // Force re-animation when text changes\n  useEffect(() => {\n    setAnimationKey(prev => prev + 1);\n  }, [text]);\n  const renderTag = () => {\n    const style = {\n      textAlign,\n      overflow: 'hidden',\n      display: 'inline-block',\n      whiteSpace: 'normal',\n      wordWrap: 'break-word',\n      willChange: 'transform, opacity'\n    };\n    const classes = `split-parent ${className}`;\n    switch (tag) {\n      case 'h1':\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          ref: ref,\n          style: style,\n          className: classes,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this);\n      case 'h2':\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          ref: ref,\n          style: style,\n          className: classes,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this);\n      case 'h3':\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          ref: ref,\n          style: style,\n          className: classes,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this);\n      case 'h4':\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          ref: ref,\n          style: style,\n          className: classes,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this);\n      case 'h5':\n        return /*#__PURE__*/_jsxDEV(\"h5\", {\n          ref: ref,\n          style: style,\n          className: classes,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this);\n      case 'h6':\n        return /*#__PURE__*/_jsxDEV(\"h6\", {\n          ref: ref,\n          style: style,\n          className: classes,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          ref: ref,\n          style: style,\n          className: classes,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return renderTag();\n};\n_s(SplitText, \"MxEw0gbWpRR29KiRE73ZGw+FibM=\", false, function () {\n  return [useGSAP];\n});\n_c = SplitText;\nexport default SplitText;\nvar _c;\n$RefreshReg$(_c, \"SplitText\");","map":{"version":3,"names":["useRef","useEffect","useState","gsap","useGSAP","jsxDEV","_jsxDEV","SplitText","text","className","delay","duration","ease","splitType","from","opacity","y","to","textAlign","tag","onLetterAnimationComplete","_s","ref","animationKey","setAnimationKey","splitText","element","type","textContent","innerHTML","split","map","char","i","span","document","createElement","style","display","transformOrigin","appendChild","word","marginRight","current","el","targets","set","stagger","onComplete","dependencies","scope","prev","renderTag","overflow","whiteSpace","wordWrap","willChange","classes","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexmario/Desktop/Dj Suru/src/components/SplitText.js"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\nimport { gsap } from 'gsap';\nimport { useGSAP } from '@gsap/react';\n\nconst SplitText = ({\n  text,\n  className = '',\n  delay = 100,\n  duration = 0.6,\n  ease = 'power3.out',\n  splitType = 'chars',\n  from = { opacity: 0, y: 40 },\n  to = { opacity: 1, y: 0 },\n  textAlign = 'center',\n  tag = 'p',\n  onLetterAnimationComplete\n}) => {\n  const ref = useRef(null);\n  const [animationKey, setAnimationKey] = useState(0);\n\n  // Simple text splitting function\n  const splitText = (element, type) => {\n    const text = element.textContent;\n    element.innerHTML = '';\n\n    if (type === 'chars') {\n      return text.split('').map((char, i) => {\n        const span = document.createElement('span');\n        span.textContent = char === ' ' ? '\\u00A0' : char;\n        span.style.display = 'inline-block';\n        span.style.transformOrigin = 'center bottom';\n        element.appendChild(span);\n        return span;\n      });\n    } else if (type === 'words') {\n      return text.split(' ').map((word, i) => {\n        const span = document.createElement('span');\n        span.textContent = word;\n        span.style.display = 'inline-block';\n        span.style.transformOrigin = 'center bottom';\n        span.style.marginRight = '0.25em';\n        element.appendChild(span);\n        return span;\n      });\n    }\n    return [element];\n  };\n\n  useGSAP(\n    () => {\n      if (!ref.current || !text) return;\n      const el = ref.current;\n\n      // Clear previous content\n      el.innerHTML = text;\n\n      // Split the text\n      const targets = splitText(el, splitType);\n\n      // Set initial state\n      gsap.set(targets, from);\n\n      // Animate\n      gsap.to(targets, {\n        ...to,\n        duration,\n        ease,\n        stagger: delay / 1000,\n        onComplete: () => {\n          onLetterAnimationComplete?.();\n        }\n      });\n    },\n    {\n      dependencies: [text, animationKey],\n      scope: ref\n    }\n  );\n\n  // Force re-animation when text changes\n  useEffect(() => {\n    setAnimationKey(prev => prev + 1);\n  }, [text]);\n\n  const renderTag = () => {\n    const style = {\n      textAlign,\n      overflow: 'hidden',\n      display: 'inline-block',\n      whiteSpace: 'normal',\n      wordWrap: 'break-word',\n      willChange: 'transform, opacity'\n    };\n    const classes = `split-parent ${className}`;\n    switch (tag) {\n      case 'h1':\n        return (\n          <h1 ref={ref} style={style} className={classes}>\n            {text}\n          </h1>\n        );\n      case 'h2':\n        return (\n          <h2 ref={ref} style={style} className={classes}>\n            {text}\n          </h2>\n        );\n      case 'h3':\n        return (\n          <h3 ref={ref} style={style} className={classes}>\n            {text}\n          </h3>\n        );\n      case 'h4':\n        return (\n          <h4 ref={ref} style={style} className={classes}>\n            {text}\n          </h4>\n        );\n      case 'h5':\n        return (\n          <h5 ref={ref} style={style} className={classes}>\n            {text}\n          </h5>\n        );\n      case 'h6':\n        return (\n          <h6 ref={ref} style={style} className={classes}>\n            {text}\n          </h6>\n        );\n      default:\n        return (\n          <p ref={ref} style={style} className={classes}>\n            {text}\n          </p>\n        );\n    }\n  };\n  return renderTag();\n};\n\nexport default SplitText;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}